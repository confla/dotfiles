# Copy and paste in tmux (all to clipboard)
# prefix-[ to enter copy mode, vi keys to move, v/V to start selection, y to copy
# On linux need 'xclip -in -selection clipboard'
setw -g mode-keys vi                                                # vi keys to move
bind -T copy-mode-vi Escape send-keys -X cancel                     # ESC to cancel
bind -T copy-mode-vi v send-keys -X begin-selection                 # v - start selection (VISUAL MODE)
bind -T copy-mode-vi V send-keys -X select-line                     # V - start selection (VISUAL BLOCK)
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'   # y to yank/copy
#bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'   # y to yank/copy
# prefix-p to paste
unbind p
bind-key p run "xclip -out -selection clipboard | tmux load-buffer - && tmux paste-buffer"
#bind-key p run "pbpaste | tmux load-buffer - && tmux paste-buffer"

# Reload tmux config
bind-key r \
    source-file ~/.tmux.conf \;\
    display 'Reloaded tmux configuration'

# Pass through environment varibales for smooth X11 forwarding
set-option -g update-environment "DISPLAY"

# change prefix from default (C-b) to `
unbind-key C-b
set -g prefix `
bind-key ` send-prefix

# bind prefix-q to kill session with warning
bind-key q confirm-before -p "kill-session #W? (y/n)" kill-session

set -g default-terminal xterm-256color
set -g history-limit 10000
set -g base-index 1
set -g pane-base-index 1

# Set mouse mode on by default, but allow it to be toggled with prefix-m/M
set -g mouse on
bind-key m \
    set -g mouse on \;\
    display 'Mouse mode ON'
bind-key M \
    set -g mouse off \;\
    display 'Mouse mode OFF'

# split windows with vim shortcuts (with prefix)
bind-key v split-window -h
bind-key s split-window -v

# move between windows with Ctl-hl (no prefix)
bind-key -n C-h previous-window
bind-key -n C-l next-window

# move between panes with Alt-hjkl (no prefix)
#bind -n M-k select-pane -U
#bind -n M-j select-pane -D
#bind -n M-h select-pane -L
#bind -n M-l select-pane -R
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_vim="echo '#{pane_current_command}' | \
    grep -iqE '(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"

# panel resize in all four directions using HJKL
bind-key K resize-pane -U 5
bind-key J resize-pane -D 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5
